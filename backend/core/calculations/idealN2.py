from typing import Dict

n2_data = {
    0  : [0, 0, 0],
    220: [6391, 4562, 182.639],
    230: [6683, 4770, 183.938],
    240: [6975, 4979, 185.180],
    250: [7266, 5188, 186.370],
    260: [7558, 5396, 187.514],
    270: [7849, 5604, 188.614],
    280: [8141, 5813, 189.673],
    290: [8432, 6021, 190.695],
    298: [8669, 6190, 191.502],
    300: [8723, 6229, 191.682],
    310: [9014, 6437, 192.638],
    320: [9306, 6645, 193.562],
    330: [9597, 6853, 194.459],
    340: [9888, 7061, 195.328],
    350: [10180, 7270, 196.173],
    360: [10471, 7478, 196.995],
    370: [10763, 7687, 197.794],
    380: [11055, 7895, 198.587],
    390: [11347, 8104, 199.331],
    400: [11640, 8314, 200.071],
    410: [11932, 8523, 200.794],
    420: [12225, 8733, 201.499],
    430: [12518, 8943, 202.189],
    440: [12811, 9153, 202.863],
    450: [13105, 9363, 203.523],
    460: [13399, 9574, 204.170],
    470: [13693, 9786, 204.803],
    480: [13988, 9997, 205.424],
    490: [14285, 10210, 206.033],
    500: [14581, 10423, 206.630],
    510: [14876, 10635, 207.216],
    520: [15172, 10848, 207.792],
    530: [15469, 11062, 208.358],
    540: [15766, 11277, 208.914],
    550: [16064, 11492, 209.461],
    560: [16363, 11707, 209.999],
    570: [16662, 11923, 210.528],
    580: [16962, 12139, 211.049],
    590: [17262, 12356, 211.562],
    600: [17563, 12574, 212.066],
    610: [17864, 12792, 212.564],
    620: [18166, 13011, 213.049],
    630: [18468, 13230, 213.514],
    640: [18770, 13450, 213.961],
    650: [19075, 13671, 214.489],
    660: [19380, 13893, 214.999],
    670: [19685, 14116, 215.413],
    680: [19991, 14340, 215.915],
    690: [20297, 14560, 216.314],
    700: [20604, 14784, 216.756],
    710: [20912, 15008, 217.192],
    720: [21220, 15234, 217.624],
    730: [21529, 15460, 218.059],
    740: [21839, 15687, 218.495],
    750: [22149, 15913, 218.889],
    760: [22460, 16141, 219.310],
    770: [22772, 16370, 219.709],
    780: [23085, 16599, 220.107],
    790: [23398, 16830, 220.512],
    800: [23714, 17061, 220.957],
    810: [24027, 17292, 221.298],
    820: [24342, 17524, 221.694],
    830: [24658, 17757, 222.067],
    840: [24974, 17990, 222.427],
    850: [25292, 18224, 222.822],
    860: [25610, 18459, 223.168],
    870: [25928, 18695, 223.562],
    880: [26248, 19286, 223.927],
    890: [26568, 19168, 224.288],
    900: [26890, 19407, 224.647],
    910: [27210, 19647, 225.003],
    920: [27532, 19883, 225.353],
    930: [27854, 20120, 225.701],
    940: [28178, 20362, 226.048],
    950: [28501, 20603, 226.380],
    960: [28826, 20844, 226.728],
    970: [29151, 21086, 227.064],
    980: [29476, 21328, 227.396],
    990: [29803, 21571, 227.728],
    1000: [30129, 21815, 228.057],
    1020: [30784, 22304, 228.706],
    1040: [31442, 22795, 229.374],
    1060: [32101, 23288, 229.973],
    1080: [32762, 23782, 230.541],
    1100: [33426, 24280, 231.199],
    1120: [34094, 24780, 231.799],
    1140: [34760, 25282, 232.391],
    1160: [35430, 25786, 232.979],
    1180: [36104, 26291, 233.549],
    1200: [36777, 26799, 234.133],
    1220: [37452, 27308, 234.673],
    1240: [38127, 27819, 235.214],
    1260: [38807, 28331, 235.766],
    1280: [39488, 28845, 236.302],
    1300: [40170, 29361, 236.831],
    1320: [40853, 29878, 237.353],
    1340: [41539, 30398, 237.867],
    1360: [42227, 30919, 238.378],
    1380: [42915, 31441, 238.878],
    1400: [43605, 31964, 239.375],
    1420: [44305, 32489, 239.865],
    1440: [45006, 33016, 240.380],
    1460: [45682, 33543, 240.827],
    1480: [46377, 34071, 241.337],
    1500: [47073, 34601, 241.768],
    1520: [47771, 35133, 242.228],
    1540: [48470, 35665, 242.685],
    1560: [49168, 36197, 243.137],
    1580: [49869, 36732, 243.585],
    1600: [50571, 37268, 244.028],
    1620: [51276, 37804, 244.476],
    1640: [51980, 38344, 244.896],
    1660: [52686, 38884, 245.324],
    1680: [53393, 39424, 245.747],
    1700: [54099, 39965, 246.166],
    1720: [54807, 40507, 246.580],
    1740: [55516, 41049, 246.990],
    1760: [56227, 41594, 247.396],
    1780: [56938, 42139, 247.798],
    1800: [57651, 42685, 248.195],
    1820: [58363, 43231, 248.583],
    1840: [59075, 43777, 248.979],
    1860: [59790, 44324, 249.365],
    1880: [60504, 44873, 249.748],
    1900: [61220, 45423, 250.128],
    1920: [61936, 45973, 250.502],
    1940: [62654, 46524, 250.874],
    1960: [63381, 47075, 251.242],
    1980: [64100, 47627, 251.607],
    2000: [64819, 48181, 251.971],
    2020: [65538, 48737, 252.335],
    2040: [66258, 49294, 252.698],
    2060: [66978, 49851, 253.061],
    2080: [67698, 50410, 253.423],
    2100: [68419, 50970, 253.786],
    2120: [69141, 51531, 254.149],
    2140: [69863, 52093, 254.512],
    2160: [70585, 52656, 254.875],
    2180: [71308, 53220, 255.238],
    2200: [72031, 53785, 255.602],
    2220: [72754, 54350, 255.966],
    2240: [73478, 54916, 256.330],
    2260: [74202, 55483, 256.694],
    2280: [74926, 56051, 257.059],
    2300: [75650, 56619, 257.424],
    2320: [76375, 57188, 257.789],
    2340: [77100, 57758, 258.155],
    2360: [77825, 58328, 258.520],
    2380: [78550, 58899, 258.886],
    2400: [79276, 59470, 259.252],
    2420: [80002, 60042, 259.618],
    2440: [80728, 60615, 259.984],
    2460: [81454, 61188, 260.350],
    2480: [82180, 61761, 260.717],
    2500: [82906, 62335, 261.084],
    2520: [83633, 62910, 261.451],
    2540: [84360, 63485, 261.818],
    2560: [85087, 64061, 262.185],
    2580: [85814, 64637, 262.553],
    2600: [86542, 65214, 262.921],
    2620: [87270, 65791, 263.289],
    2640: [87998, 66369, 263.658],
    2660: [88727, 66947, 264.027],
    2680: [89456, 67525, 264.396],
    2700: [90186, 68104, 264.765],
    2720: [90916, 68684, 265.134],
    2740: [91646, 69263, 265.504],
    2760: [92377, 69843, 265.874],
    2780: [93108, 70424, 266.244],
    2800: [93839, 71005, 266.615],
    2820: [94570, 71586, 266.986],
    2840: [95302, 72167, 267.357],
    2860: [96034, 72749, 267.728],
    2880: [96766, 73331, 268.099],
    2900: [97498, 73913, 268.471],
    2920: [98230, 74495, 268.843],
    2940: [98962, 75078, 269.214],
    2960: [99694, 75661, 269.586],
    2980: [100427, 76244, 269.958],
    3000: [101160, 76828, 270.330],
    3020: [101893, 77411, 270.703],
    3040: [102626, 77995, 271.075],
    3060: [103360, 78580, 271.448],
    3080: [104094, 79164, 271.821],
    3100: [104828, 79749, 272.194],
    3120: [105562, 80334, 272.568],
    3140: [106296, 80919, 272.941],
    3160: [107030, 81504, 273.315],
    3180: [107765, 82090, 273.689],
    3200: [108500, 82676, 274.064],
    3220: [109235, 83261, 274.438],
    3240: [109970, 83847, 274.813],
    3250: [110690, 83668, 269.763]
    
}

def interpolate(val1, val2, x1, x2, x):
    return val1 + (val2 - val1) * (x - x1) / (x2 - x1)

class IdealNitrogenProperties:
    def __init__(self, inputs: Dict[str, str]):
        self.inputs = inputs
        self.T = float(inputs.get("temperature", 0))
        self.temps = sorted(n2_data.keys())

    def calculate(self) -> Dict[str, float]:
        if not (self.temps[0] <= self.T <= self.temps[-1]):
            raise ValueError(f"Temperature {self.T} K out of range.")

        if self.T in n2_data:
            h, u, s = n2_data[self.T]
        else:
            for i in range(len(self.temps) - 1):
                T1, T2 = self.temps[i], self.temps[i + 1]
                if T1 <= self.T <= T2:
                    break
            v1 = n2_data[T1]
            v2 = n2_data[T2]

            h = interpolate(v1[0], v2[0], T1, T2, self.T)
            u = interpolate(v1[1], v2[1], T1, T2, self.T)
            s = interpolate(v1[2], v2[2], T1, T2, self.T)

        return {
            "temperature": self.T,
            "enthalpy (h)": round(h, 4),  # kJ/kmol
            "internal_energy (u)": round(u, 4),  # kJ/kmol
            "entropy (s°)": round(s, 5),  # kJ/kmol·K
        }

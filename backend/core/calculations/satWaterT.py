from typing import Dict

# T_sat data in °C: [P_sat (kPa), v_f, v_g, u_f, u_fg, u_g, h_f, h_fg, h_g, s_f, s_fg, s_g]
T_sat_data = {
    0.01: [0.6117, 0.001000, 206.00, 0.000, 2374.9, 2374.9, 0.001, 2500.9, 2500.9, 0.0000, 9.1556, 9.1556],
    5.00: [0.8725, 0.001000, 147.03, 21.019, 2360.8, 2381.8, 21.020, 2489.1, 2510.1, 0.0763, 9.0487, 9.1249],
    10.00: [1.2281, 0.001000, 106.32, 42.020, 2346.6, 2388.7, 42.022, 2477.2, 2519.2, 0.1511, 8.7488, 8.8999],
    15.00: [1.7057, 0.001001, 77.885, 62.980, 2332.5, 2395.5, 62.982, 2465.4, 2528.4, 0.2245, 8.5569, 8.7803],
    20.00: [2.3392, 0.001002, 57.762, 83.913, 2318.4, 2402.3, 83.915, 2453.5, 2537.4, 0.2965, 8.3698, 8.6661],
    25.00: [3.1698, 0.001003, 43.340, 104.83, 2304.3, 2409.1, 104.83, 2441.7, 2546.5, 0.3672, 8.1895, 8.5567],
    30.00: [4.2469, 0.001004, 32.879, 125.73, 2290.2, 2415.9, 125.74, 2429.8, 2555.6, 0.4368, 8.0152, 8.4520],
    35.00: [5.6291, 0.001006, 25.205, 146.63, 2276.0, 2422.7, 146.64, 2417.9, 2564.6, 0.5051, 7.8466, 8.3517],
    40.00: [7.3753, 0.001008, 19.515, 167.41, 2261.8, 2429.2, 167.42, 2406.3, 2573.7, 0.5724, 7.6823, 8.2547],
    45.00: [9.5953, 0.001010, 15.251, 188.43, 2247.7, 2436.1, 188.44, 2394.0, 2582.4, 0.6386, 7.5247, 8.1633],
    50.00: [12.396, 0.001012, 12.066, 209.34, 2233.4, 2442.7, 209.34, 2382.0, 2591.3, 0.7038, 7.3728, 8.0766],
    55.00: [15.763, 0.001015, 9.5639, 230.24, 2219.1, 2449.3, 230.26, 2369.8, 2600.1, 0.7680, 7.2218, 7.9898],
    60.00: [19.740, 0.001017, 7.6670, 251.03, 2204.6, 2455.7, 251.05, 2357.2, 2608.2, 0.8310, 7.0739, 7.9049],
    65.00: [25.043, 0.001020, 6.1395, 272.09, 2190.3, 2462.4, 272.12, 2344.7, 2616.8, 0.8935, 6.9306, 7.8242],
    70.00: [31.202, 0.001023, 5.0396, 293.04, 2175.8, 2468.9, 293.07, 2332.3, 2625.3, 0.9553, 6.7896, 7.7449],
    75.00: [38.597, 0.001026, 4.1291, 313.99, 2161.3, 2475.3, 314.03, 2320.6, 2634.6, 1.0158, 6.6565, 7.6811],
    80.00: [47.365, 0.001029, 3.3841, 334.94, 2146.6, 2481.5, 335.00, 2308.7, 2643.7, 1.0753, 6.5289, 7.6042],
    85.00: [57.868, 0.001032, 2.8261, 355.96, 2131.9, 2487.8, 356.02, 2295.8, 2651.8, 1.1346, 6.4083, 7.5438],
    90.00: [70.180, 0.001036, 2.3953, 377.00, 2117.0, 2494.0, 377.07, 2281.9, 2659.0, 1.1930, 6.2839, 7.4769],
    95.00: [84.609, 0.001040, 1.9808, 398.00, 2102.0, 2500.0, 398.09, 2266.9, 2665.0, 1.2505, 6.1647, 7.4151],
    100.00: [101.42, 0.001043, 1.6720, 419.06, 2087.0, 2506.1, 419.17, 2252.6, 2671.8, 1.3073, 6.0470, 7.3542],
    105.00: [120.90, 0.001047, 1.4186, 440.15, 2071.8, 2511.9, 440.28, 2237.2, 2677.5, 1.3634, 5.9135, 7.2952],
    110.00: [143.21, 0.001050, 1.2240, 461.26, 2056.4, 2517.7, 461.42, 2221.3, 2682.7, 1.4184, 5.7913, 7.2097],
    115.00: [169.18, 0.001056, 1.0360, 482.42, 2040.9, 2523.3, 482.59, 2206.1, 2688.7, 1.4737, 5.7092, 7.1829],
    120.00: [198.67, 0.001060, 0.8913, 503.60, 2025.3, 2528.9, 503.81, 2202.1, 2706.0, 1.5279, 5.6013, 7.1292],
    125.00: [232.23, 0.001065, 0.77012, 524.83, 2009.5, 2534.3, 525.07, 2188.1, 2713.1, 1.5816, 5.4956, 7.0771],
    130.00: [270.28, 0.001070, 0.66808, 546.10, 1993.4, 2539.5, 546.38, 2173.7, 2720.1, 1.6346, 5.3919, 7.0265],
    135.00: [313.22, 0.001075, 0.58179, 567.41, 1977.3, 2544.7, 567.75, 2159.1, 2726.9, 1.6872, 5.2901, 6.9773],
    140.00: [361.53, 0.001080, 0.50850, 588.77, 1960.9, 2549.6, 589.16, 2143.5, 2733.5, 1.7392, 5.1921, 6.9294],
    145.00: [415.68, 0.001085, 0.44600, 610.19, 1944.2, 2554.4, 610.64, 2129.2, 2739.8, 1.7908, 5.0919, 6.8827],
    150.00: [476.16, 0.001091, 0.39248, 631.66, 1927.4, 2559.1, 632.18, 2113.8, 2745.9, 1.8418, 4.9935, 6.8371],
    155.00: [543.49, 0.001096, 0.34648, 653.19, 1910.3, 2563.5, 653.79, 2098.0, 2751.8, 1.8924, 4.9006, 6.7922],
    160.00: [618.23, 0.001102, 0.30680, 674.79, 1893.0, 2567.8, 675.47, 2082.2, 2757.7, 1.9424, 4.8062, 6.7492],
    165.00: [700.93, 0.001108, 0.27244, 696.46, 1875.4, 2571.9, 697.24, 2065.6, 2762.9, 1.9923, 4.7134, 6.7067],
    170.00: [792.18, 0.001114, 0.24260, 718.20, 1857.5, 2575.7, 719.08, 2048.8, 2767.9, 2.0421, 4.6233, 6.6652],
    175.00: [892.60, 0.001121, 0.21659, 740.02, 1839.4, 2579.4, 741.02, 2031.7, 2772.7, 2.0906, 4.5335, 6.6242],
    180.00: [1002.3, 0.001127, 0.19384, 761.92, 1821.0, 2582.9, 763.18, 2014.4, 2777.6, 2.1384, 4.4470, 6.5854],
    185.00: [1123.5, 0.001134, 0.17390, 783.91, 1802.1, 2586.0, 785.19, 1996.2, 2781.4, 2.1841, 4.3576, 6.5417],
    190.00: [1255.2, 0.001141, 0.15636, 806.06, 1782.8, 2588.9, 807.35, 1977.3, 2784.6, 2.2285, 4.2705, 6.4990],
    195.00: [1398.8, 0.001149, 0.14089, 828.18, 1763.6, 2591.7, 829.78, 1959.0, 2788.8, 2.2831, 4.1847, 6.4678],
    200.00: [1554.9, 0.001157, 0.12721, 850.46, 1743.7, 2594.2, 852.26, 1939.8, 2792.0, 2.3305, 4.0997, 6.4302],
    205.00: [1724.3, 0.001164, 0.15108, 872.86, 1723.5, 2596.4, 874.87, 1920.0, 2794.9, 2.3776, 4.5562, 6.9338],
    210.00: [1907.7, 0.001170, 0.14299, 895.38, 1702.9, 2598.3, 897.61, 1899.7, 2797.3, 2.4245, 4.3918, 6.8163],
    215.00: [2103.1, 0.001176, 0.13479, 918.02, 1681.6, 2599.7, 920.87, 1879.0, 2799.9, 2.4713, 4.2316, 6.7029],
    220.00: [2319.6, 0.001180, 0.086094, 940.79, 1660.5, 2601.3, 943.55, 1857.4, 2800.9, 2.5184, 4.0764, 6.5948],
    225.00: [2549.7, 0.001189, 0.078405, 963.70, 1638.6, 2602.3, 966.76, 1835.4, 2802.2, 2.5639, 3.8844, 6.4483],
    230.00: [2797.1, 0.001209, 0.071505, 986.76, 1616.1, 2602.9, 990.14, 1812.8, 2802.9, 2.6100, 3.6028, 6.2128],
    235.00: [3062.5, 0.001229, 0.065311, 1010.0, 1593.1, 2603.1, 1013.7, 1789.7, 2803.4, 2.6542, 3.3448, 5.9990],
    240.00: [3347.0, 0.001250, 0.059707, 1033.6, 1569.5, 2603.1, 1037.7, 1766.0, 2803.7, 2.6978, 3.1052, 5.8030],
    245.00: [3651.2, 0.001272, 0.054665, 1056.9, 1545.7, 2602.6, 1061.5, 1741.9, 2803.4, 2.7416, 2.8813, 5.6229],
    250.00: [3975.2, 0.001295, 0.050085, 1080.4, 1521.5, 2601.9, 1085.6, 1717.4, 2803.0, 2.7848, 2.6709, 5.4557],
    255.00: [4322.9, 0.001318, 0.045936, 1104.7, 1496.9, 2601.6, 1109.7, 1692.6, 2802.3, 2.8274, 2.4725, 5.2999],
    260.00: [4692.5, 0.001343, 0.042200, 1128.8, 1471.9, 2600.7, 1133.5, 1667.5, 2801.0, 2.8693, 2.2845, 5.1538],
    265.00: [5085.3, 0.001368, 0.038856, 1153.3, 1446.5, 2599.8, 1158.3, 1641.9, 2800.2, 2.9106, 2.1059, 5.0165],
    270.00: [5503.0, 0.001394, 0.035682, 1178.2, 1420.8, 2599.0, 1183.4, 1615.8, 2799.2, 2.9513, 1.9353, 4.8866],
    275.00: [5946.4, 0.001317, 0.032767, 1202.9, 1394.7, 2597.3, 1210.7, 1587.5, 2798.2, 2.9873, 1.7694, 4.7567],
    280.00: [6416.6, 0.001333, 0.030153, 1228.2, 1358.2, 2586.4, 1236.7, 1543.2, 2779.9, 3.0681, 2.7898, 5.8579],
    285.00: [6914.6, 0.001349, 0.027756, 1253.7, 1328.1, 2581.8, 1263.1, 1510.7, 2773.7, 3.1144, 2.7066, 5.8210],
    290.00: [7441.8, 0.001366, 0.025554, 1279.7, 1296.9, 2576.5, 1289.8, 1476.9, 2766.7, 3.1606, 2.6225, 5.7834],
    295.00: [7999.0, 0.001382, 0.023537, 1306.0, 1265.3, 2571.3, 1316.6, 1441.6, 2758.2, 3.2062, 2.5384, 5.7446],
    300.00: [8587.9, 0.001400, 0.021659, 1332.7, 1230.9, 2563.6, 1344.8, 1404.8, 2749.6, 3.2548, 2.4531, 5.7059],
    305.00: [9209.4, 0.001425, 0.019832, 1359.9, 1195.9, 2555.8, 1373.3, 1366.3, 2739.6, 3.3025, 2.3673, 5.6698],
    310.00: [9865.0, 0.001447, 0.018333, 1387.7, 1159.3, 2547.1, 1402.1, 1326.5, 2727.9, 3.3390, 2.2737, 5.6127],
    315.00: [10556.0, 0.001470, 0.016974, 1416.0, 1121.7, 2537.7, 1431.2, 1285.3, 2716.5, 3.3756, 2.1801, 5.5557],
    320.00: [11284.0, 0.001492, 0.015874, 1445.1, 1083.0, 2528.2, 1460.2, 1242.8, 2703.0, 3.4124, 2.0881, 5.5005],
    325.00: [12051.0, 0.001528, 0.014183, 1475.0, 1043.8, 2518.8, 1490.3, 1199.3, 2684.3, 3.4493, 1.9971, 5.4464],
    330.00: [12858.0, 0.001560, 0.012979, 1505.7, 993.5, 2499.2, 1525.8, 1143.0, 2666.0, 3.5051, 1.8906, 5.4422],
    335.00: [13707.0, 0.001593, 0.011934, 1536.7, 940.2, 2476.9, 1559.5, 1084.4, 2643.9, 3.5526, 1.7868, 5.3394],
    340.00: [14601.0, 0.001638, 0.010788, 1570.5, 893.8, 2464.3, 1594.6, 1029.6, 2622.0, 3.6020, 1.6576, 5.3356],
    345.00: [15541.0, 0.001684, 0.0099772, 1605.9, 837.4, 2443.2, 1631.7, 963.4, 2595.1, 3.7179, 1.5265, 5.2444],
    350.00: [16529.0, 0.001741, 0.008806, 1642.4, 775.9, 2418.3, 1671.2, 892.7, 2563.9, 3.7782, 1.4326, 5.2114],
    355.00: [17570.0, 0.001808, 0.007872, 1682.2, 706.4, 2388.6, 1714.0, 812.9, 2526.9, 3.8484, 1.2942, 5.1384],
    360.00: [18668.0, 0.001895, 0.006590, 1726.2, 625.7, 2351.9, 1761.5, 720.1, 2481.6, 3.9516, 1.1373, 5.0375],
    365.00: [19822.0, 0.002015, 0.005149, 1772.6, 530.6, 2303.2, 1811.6, 605.3, 2416.9, 4.0004, 0.9493, 4.9493],
    370.00: [21044.0, 0.002217, 0.004953, 1844.5, 385.6, 2230.1, 1891.2, 443.1, 2334.3, 4.1119, 0.6890, 4.8009],
    373.95: [22064.0, 0.003106, 0.003106, 2015.7, 0.0, 2015.7, 2084.3, 0.0, 2084.3, 4.4070, 0.0, 4.4070]
}

def interpolate(val1, val2, x1, x2, x):
    return val1 + (val2 - val1) * (x - x1) / (x2 - x1)

class SatWaterTCalculation:
    def __init__(self, inputs: Dict[str, str]):
        self.inputs = inputs
        self.temp = float(inputs.get("temperature", 0))  # °C
        self.x_value = float(inputs.get("quality", 0))   # between 0 and 1
        self.temps = sorted(T_sat_data.keys())

    def calculate(self) -> Dict[str, float]:
        if not (self.temps[0] <= self.temp <= self.temps[-1]):
            raise ValueError(f"Temperature {self.temp} °C is out of range.")
        if not (0 <= self.x_value <= 1):
            raise ValueError(f"Quality {self.x_value} must be between 0 and 1.")

        if self.temp in T_sat_data:
            props = T_sat_data[self.temp]
        else:
            for i in range(len(self.temps) - 1):
                T1, T2 = self.temps[i], self.temps[i + 1]
                if T1 <= self.temp <= T2:
                    break
            props1 = T_sat_data[T1]
            props2 = T_sat_data[T2]
            props = [interpolate(props1[j], props2[j], T1, T2, self.temp) for j in range(12)]

        P_sat, v_f, v_g, u_f, u_fg, u_g, h_f, h_fg, h_g, s_f, s_fg, s_g = props

        v = v_f + self.x_value * (v_g - v_f)
        u = u_f + self.x_value * u_fg
        h = h_f + self.x_value * h_fg
        s = s_f + self.x_value * s_fg

        return {
            "saturation_temperature (°C)": self.temp,
            "pressure (kPa)": round(P_sat, 4),
            "quality": self.x_value,
            "specific_volume (m³/kg)": round(v, 6),
            "internal_energy (kJ/kg)": round(u, 2),
            "enthalpy (kJ/kg)": round(h, 2),
            "entropy (kJ/kg·K)": round(s, 4),
        }

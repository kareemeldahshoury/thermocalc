from typing import Dict

co_data = {
    0: [0, 0, 0],
    220: [6391, 4562, 188.683],
    230: [6683, 4771, 189.980],
    240: [6975, 4979, 191.221],
    250: [7266, 5186, 192.419],
    260: [7558, 5396, 193.554],
    270: [7850, 5608, 194.638],
    280: [8142, 5812, 195.713],
    290: [8432, 6020, 196.735],
    298: [8669, 6190, 197.543],
    300: [8723, 6229, 197.723],
    310: [9014, 6437, 198.678],
    320: [9306, 6645, 199.603],
    330: [9597, 6854, 200.496],
    340: [9889, 7062, 201.371],
    350: [10181, 7271, 202.217],
    360: [10473, 7480, 203.040],
    370: [10765, 7689, 203.842],
    380: [11058, 7899, 204.622],
    390: [11351, 8108, 205.382],
    400: [11644, 8319, 206.125],
    410: [11938, 8529, 206.849],
    420: [12232, 8740, 207.549],
    430: [12527, 8952, 208.228],
    440: [12821, 9163, 208.892],
    450: [13116, 9375, 209.539],
    460: [13412, 9587, 210.280],
    470: [13708, 9800, 210.843],
    480: [14005, 10014, 211.504],
    490: [14302, 10228, 212.153],
    500: [14600, 10443, 212.719],
    510: [14899, 10658, 213.290],
    520: [15197, 10874, 213.849],
    530: [15497, 11091, 214.402],
    540: [15797, 11307, 214.950],
    550: [16097, 11524, 215.572],
    560: [16399, 11743, 215.976],
    570: [16703, 11961, 216.649],
    580: [17003, 12181, 217.195],
    590: [17307, 12401, 217.693],
    600: [17611, 12622, 218.204],
    610: [17915, 12843, 218.708],
    620: [18221, 13066, 219.205],
    630: [18527, 13289, 219.695],
    640: [18833, 13512, 220.179],
    650: [19141, 13736, 220.656],
    660: [19449, 13960, 221.127],
    670: [19758, 14187, 221.592],
    680: [20066, 14413, 222.051],
    690: [20378, 14641, 222.505],
    700: [20690, 14870, 222.953],
    710: [21002, 15099, 223.396],
    720: [21315, 15328, 223.834],
    730: [21628, 15558, 224.265],
    740: [21943, 15789, 224.693],
    750: [22258, 16022, 225.115],
    760: [22573, 16255, 225.533],
    770: [22890, 16488, 225.947],
    780: [23206, 16723, 226.357],
    790: [23526, 16957, 226.762],
    800: [23844, 17193, 227.162],
    810: [24164, 17429, 227.559],
    820: [24484, 17665, 227.952],
    830: [24803, 17902, 228.339],
    840: [25126, 18139, 228.724],
    850: [25446, 18379, 229.106],
    860: [25765, 18618, 229.486],
    870: [26091, 18858, 229.856],
    880: [26415, 19099, 230.227],
    890: [26740, 19341, 230.593],
    900: [27066, 19583, 230.957],
    910: [27392, 19826, 231.317],
    920: [27719, 20069, 231.674],
    930: [28046, 20314, 232.026],
    940: [28375, 20559, 232.379],
    950: [28703, 20805, 232.727],
    960: [29033, 21051, 233.073],
    970: [29362, 21298, 233.413],
    980: [29693, 21545, 233.752],
    990: [30024, 21793, 234.088],
    1000: [30355, 22041, 234.421],
    1020: [31020, 22540, 235.079],
    1040: [31688, 23041, 235.728],
    1060: [32357, 23544, 236.364],
    1080: [33029, 24049, 236.992],
    1100: [33702, 24557, 237.609],
    1120: [34378, 25066, 238.217],
    1140: [35054, 25575, 238.817],
    1160: [35733, 26088, 239.407],
    1180: [36406, 26602, 239.989],
    1200: [37095, 27118, 240.663],
    1220: [37780, 27637, 241.182],
    1240: [38464, 28156, 241.702],
    1260: [39145, 28678, 242.236],
    1280: [39824, 29201, 242.762],
    1300: [40534, 29725, 243.316],
    1320: [41210, 30251, 243.810],
    1340: [41899, 30778, 244.366],
    1360: [42595, 31306, 244.880],
    1380: [43309, 31836, 245.388],
    1400: [44037, 32367, 245.889],
    1420: [44707, 32900, 246.385],
    1440: [45400, 33434, 246.875],
    1460: [46110, 33971, 247.360],
    1480: [46836, 34510, 247.839],
    1500: [47517, 35046, 248.312],
    1520: [48222, 35584, 248.779],
    1540: [48928, 36124, 249.240],
    1560: [49635, 36665, 249.695],
    1580: [50344, 37207, 250.147],
    1600: [51052, 37750, 250.592],
    1620: [51763, 38294, 251.033],
    1640: [52475, 38840, 251.469],
    1660: [53184, 39382, 251.929],
    1680: [53894, 39927, 252.329],
    1700: [54609, 40474, 252.751],
    1720: [55323, 41023, 253.162],
    1740: [56039, 41572, 253.582],
    1760: [56756, 42123, 253.991],
    1780: [57473, 42673, 254.398],
    1800: [58191, 43225, 254.797],
    1820: [58910, 43778, 255.194],
    1840: [59629, 44331, 255.594],
    1860: [60351, 44886, 255.976],
    1880: [61072, 45441, 256.356],
    1900: [61794, 45997, 256.743],
    1920: [62516, 46552, 257.122],
    1940: [63238, 47108, 257.497],
    1960: [63961, 47665, 257.868],
    1980: [64684, 48221, 258.236],
    2000: [65408, 48780, 258.600],
    2020: [66124, 49337, 258.964],
    2050: [67422, 50179, 259.494],
    2100: [69044, 51584, 260.450],
    2150: [70684, 52988, 261.226],
    2200: [72288, 54392, 261.998],
    2250: [74516, 55809, 262.887],
    2300: [76345, 57222, 263.692],
    2350: [78178, 58640, 264.480],
    2400: [80013, 60061, 265.258],
    2450: [81852, 61482, 266.027],
    2500: [83591, 62906, 266.755],
    2550: [85537, 64335, 267.485],
    2600: [87383, 65766, 268.202],
    2650: [89330, 67197, 268.905],
    2700: [91077, 68628, 269.598],
    2750: [92930, 70066, 270.285],
    2800: [94784, 71504, 270.963],
    2850: [96639, 72945, 271.602],
    2900: [98495, 74335, 272.248],
    2950: [100352, 75825, 272.884],
    3000: [102210, 77316, 273.510],
    3050: [104073, 78715, 274.123],
    3100: [105939, 80164, 274.730],
    3150: [107802, 81612, 275.346],
    3200: [109667, 83061, 275.936],
    3250: [111534, 84513, 276.494]
}

def interpolate(val1, val2, x1, x2, x):
    return val1 + (val2 - val1) * (x - x1) / (x2 - x1)

class IdealCOProperties:
    def __init__(self, inputs: Dict[str, str]):
        self.inputs = inputs
        self.T = float(inputs.get("temperature", 0))
        self.temps = sorted(co_data.keys())

    def calculate(self) -> Dict[str, float]:
        if not (self.temps[0] <= self.T <= self.temps[-1]):
            raise ValueError(f"Temperature {self.T} K out of range.")

        if self.T in co_data:
            h, u, s = co_data[self.T]
        else:
            for i in range(len(self.temps) - 1):
                T1, T2 = self.temps[i], self.temps[i + 1]
                if T1 <= self.T <= T2:
                    break
            v1 = co_data[T1]
            v2 = co_data[T2]

            h = interpolate(v1[0], v2[0], T1, T2, self.T)
            u = interpolate(v1[1], v2[1], T1, T2, self.T)
            s = interpolate(v1[2], v2[2], T1, T2, self.T)

        return {
            "temperature": self.T,
            "enthalpy (h)": round(h, 4),
            "internal_energy (u)": round(u, 4),
            "entropy (sÂ°)": round(s, 5),
        }

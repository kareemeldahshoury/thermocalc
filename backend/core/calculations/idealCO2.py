from typing import Dict

co2_data = {
    220: [6601, 4772, 202.966],
    230: [6938, 5026, 204.464],
    240: [7280, 5285, 205.920],
    250: [7627, 5548, 207.337],
    260: [7979, 5817, 208.717],
    270: [8335, 6091, 210.062],
    280: [8696, 6370, 211.375],
    290: [9063, 6651, 212.660],
    298: [9364, 6885, 213.685],
    300: [9431, 6939, 213.915],
    310: [9807, 7203, 214.915],
    320: [10186, 7526, 216.351],
    330: [10570, 7826, 217.534],
    340: [10959, 8131, 218.691],
    350: [11351, 8439, 219.834],
    360: [11748, 8752, 220.694],
    370: [12148, 9068, 222.042],
    380: [12552, 9392, 223.122],
    390: [12960, 9718, 224.182],
    400: [13372, 10046, 225.225],
    410: [13787, 10378, 226.250],
    420: [14206, 10714, 227.258],
    430: [14628, 11053, 228.252],
    440: [15054, 11393, 229.203],
    450: [15483, 11742, 230.194],
    460: [15915, 11994, 231.144],
    470: [16351, 12244, 232.080],
    480: [16791, 12800, 232.996],
    490: [17232, 13158, 233.916],
    500: [17678, 13521, 234.814],
    510: [18126, 13863, 235.700],
    520: [18577, 14214, 236.575],
    530: [19029, 14622, 237.439],
    540: [19483, 14996, 238.292],
    550: [19945, 15372, 239.135],
    560: [20410, 15751, 239.966],
    570: [20870, 16131, 240.789],
    580: [21337, 16515, 241.602],
    590: [21787, 16902, 242.405],
    600: [22280, 17291, 243.199],
    610: [22754, 17683, 243.983],
    620: [23231, 18076, 244.758],
    630: [23709, 18471, 245.524],
    640: [24190, 18869, 246.282],
    650: [24674, 19270, 247.032],
    660: [25148, 19674, 247.773],
    670: [25648, 20078, 248.507],
    680: [26131, 20482, 249.233],
    690: [26631, 20894, 249.952],
    700: [27125, 21305, 250.663],
    710: [27622, 21719, 251.368],
    720: [28120, 22134, 252.065],
    730: [28622, 22522, 252.755],
    740: [29124, 22972, 253.439],
    750: [29629, 23393, 254.117],
    760: [30135, 23817, 254.790],
    770: [30644, 24242, 255.452],
    780: [31144, 24668, 256.110],
    790: [31665, 25097, 256.762],
    800: [32179, 25527, 257.408],
    810: [32694, 25959, 258.048],
    820: [33212, 26393, 258.682],
    830: [33730, 26829, 259.311],
    840: [34251, 27266, 259.935],
    850: [34773, 27706, 260.551],
    860: [35296, 28148, 261.161],
    870: [35821, 28591, 261.770],
    880: [36346, 29036, 262.367],
    890: [36876, 29476, 262.968],
    900: [37395, 29922, 263.563],
    910: [37935, 30369, 264.146],
    920: [38467, 30818, 264.728],
    930: [39008, 31268, 265.304],
    940: [39535, 31719, 265.877],
    950: [40070, 32171, 266.444],
    960: [40602, 32625, 267.007],
    970: [41145, 33081, 267.566],
    980: [41685, 33537, 268.119],
    990: [42226, 33995, 268.670],
    1000: [42769, 34455, 269.215],
    1020: [43859, 35378, 270.293],
    1040: [44953, 36306, 271.354],
    1060: [46051, 37238, 272.400],
    1080: [47153, 38174, 273.430],
    1100: [48258, 39112, 274.445],
    1120: [49369, 40057, 275.444],
    1140: [50484, 41006, 276.430],
    1160: [51602, 41961, 277.403],
    1180: [52724, 42913, 278.361],
    1200: [53848, 43871, 279.307],
    1220: [54977, 44834, 280.240],
    1240: [56109, 45803, 281.162],
    1260: [57244, 46778, 282.071],
    1280: [58381, 47739, 282.969],
    1300: [59522, 48713, 283.847],
    1320: [60666, 49691, 284.722],
    1340: [61813, 50672, 285.586],
    1360: [62963, 51656, 286.439],
    1380: [64116, 52643, 287.283],
    1400: [65271, 53631, 288.106],
    1420: [66429, 54621, 288.924],
    1440: [67588, 55609, 289.735],
    1460: [68748, 56599, 290.542],
    1480: [69911, 57590, 291.343],
    1500: [71078, 58606, 292.114],
    1520: [72246, 59609, 292.858],
    1540: [73417, 60613, 293.586],
    1560: [74590, 61620, 294.414],
    1580: [75767, 62631, 295.161],
    1600: [76944, 63641, 295.901],
    1620: [78123, 64653, 296.632],
    1640: [79305, 65668, 297.356],
    1660: [80486, 66692, 298.072],
    1680: [81670, 67702, 298.781],
    1700: [82856, 68721, 299.482],
    1720: [84043, 69742, 300.177],
    1740: [85231, 70764, 300.863],
    1760: [86420, 71787, 301.543],
    1780: [87162, 72812, 302.217],
    1800: [88086, 73860, 302.884],
    1820: [90000, 74886, 303.541],
    1840: [91196, 75797, 304.198],
    1860: [92394, 76929, 304.845],
    1880: [93593, 77962, 305.487],
    1900: [94793, 78996, 306.122],
    1920: [95995, 80031, 306.751],
    1940: [97197, 81067, 307.374],
    1960: [98401, 82105, 307.992],
    1980: [99606, 83144, 308.604],
    2000: [100804, 84185, 309.210],
    2020: [103964, 86791, 310.760],
    2050: [106864, 89404, 312.160],
    2100: [109899, 92023, 313.589],
    2150: [112939, 94648, 314.988],
    2200: [115976, 97277, 316.368],
    2250: [119035, 99912, 317.695],
    2300: [122091, 102552, 319.011],
    2350: [125152, 105197, 320.302],
    2400: [128214, 107849, 321.566],
    2450: [131290, 110504, 322.808],
    2500: [134375, 113166, 324.028],
    2550: [137449, 115832, 325.226],
    2600: [140533, 118500, 326.395],
    2650: [143620, 121172, 327.549],
    2700: [146723, 123849, 328.682],
    2750: [149808, 126528, 329.800],
    2800: [152908, 129211, 330.899],
    2850: [156009, 131898, 331.975],
    2900: [159114, 134589, 333.035],
    2950: [162226, 137283, 334.084],
    3000: [165342, 139980, 335.119],
    3050: [168456, 142681, 336.141],
    3100: [171576, 145385, 337.124],
    3150: [174694, 148089, 338.101],
    3200: [177822, 150801, 339.069],
    3250: [180950, 153514, 340.030]
}

def interpolate(val1, val2, x1, x2, x):
    return val1 + (val2 - val1) * (x - x1) / (x2 - x1)

class IdealCO2Properties:
    def __init__(self, inputs: Dict[str, str]):
        self.inputs = inputs
        self.T = float(inputs.get("temperature", 0))
        self.temps = sorted(co2_data.keys())

    def calculate(self) -> Dict[str, float]:
        if not (self.temps[0] <= self.T <= self.temps[-1]):
            raise ValueError(f"Temperature {self.T} K out of range.")

        if self.T in co2_data:
            h, u, s = co2_data[self.T]
        else:
            for i in range(len(self.temps) - 1):
                T1, T2 = self.temps[i], self.temps[i + 1]
                if T1 <= self.T <= T2:
                    break
            v1 = co2_data[T1]
            v2 = co2_data[T2]

            h = interpolate(v1[0], v2[0], T1, T2, self.T)
            u = interpolate(v1[1], v2[1], T1, T2, self.T)
            s = interpolate(v1[2], v2[2], T1, T2, self.T)

        return {
            "temperature": self.T,
            "enthalpy (h)": round(h, 4),
            "internal_energy (u)": round(u, 4),
            "entropy (sÂ°)": round(s, 5),
        }

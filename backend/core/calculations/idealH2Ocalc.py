from typing import Dict

# Water vapor (H2O) data
h2o_data = {
    220: [7295, 5466, 178.576],
    230: [7628, 5715, 180.054],
    240: [7961, 5965, 181.471],
    250: [8294, 6215, 182.831],
    260: [8627, 6466, 184.139],
    270: [8961, 6716, 185.399],
    280: [9296, 6965, 186.613],
    290: [9631, 7219, 187.791],
    298: [9904, 7425, 188.720],
    300: [9966, 7472, 188.928],
    310: [10302, 7573, 189.543],
    320: [10639, 7978, 190.156],
    330: [10976, 8232, 192.136],
    340: [11314, 8487, 193.144],
    350: [11652, 8742, 194.125],
    360: [11992, 8998, 195.081],
    370: [12331, 9255, 196.012],
    380: [12672, 9513, 196.920],
    390: [13014, 9771, 197.807],
    400: [13356, 10030, 198.673],
    410: [13699, 10290, 199.521],
    420: [14043, 10551, 200.351],
    430: [14388, 10813, 201.160],
    440: [14734, 11075, 201.950],
    450: [15080, 11339, 202.734],
    460: [15428, 11603, 203.510],
    470: [15777, 11869, 204.247],
    480: [16126, 12135, 204.967],
    490: [16477, 12403, 205.705],
    500: [16828, 12671, 206.413],
    510: [17181, 12940, 207.112],
    520: [17534, 13210, 207.799],
    530: [17889, 13482, 208.475],
    540: [18245, 13755, 209.139],
    550: [18601, 14028, 209.795],
    560: [18959, 14303, 210.439],
    570: [19318, 14579, 211.075],
    580: [19678, 14856, 211.702],
    590: [20039, 15134, 212.320],
    600: [20402, 15413, 212.920],
610: [20765, 15693, 213.529],
620: [21130, 15975, 214.122],
630: [21495, 16257, 214.707],
640: [21862, 16541, 215.286],
650: [22230, 16826, 215.856],
660: [22600, 17112, 216.417],
670: [22970, 17399, 216.978],
680: [23342, 17688, 217.527],
690: [23714, 17978, 218.071],
700: [24088, 18268, 218.610],
710: [24464, 18561, 219.142],
720: [24840, 18854, 219.660],
730: [25218, 19148, 220.189],
740: [25597, 19444, 220.707],
750: [25977, 19741, 221.215],
760: [26358, 20039, 221.715],
770: [26741, 20339, 222.221],
780: [27125, 20639, 222.717],
790: [27510, 20941, 223.207],
800: [27896, 21243, 223.693],
810: [28284, 21549, 224.174],
820: [28672, 21855, 224.654],
830: [29062, 22162, 225.132],
840: [29452, 22470, 225.593],
850: [29846, 22779, 226.057],
860: [30240, 23090, 226.517],
870: [30635, 23402, 226.974],
880: [31032, 23715, 227.426],
890: [31429, 24029, 227.875],
900: [31828, 24345, 228.320],
910: [32228, 24662, 228.763],
920: [32629, 24980, 229.202],
930: [33032, 25299, 229.637],
940: [33436, 25621, 230.070],
950: [33841, 25943, 230.499],
960: [34247, 26265, 230.926],
970: [34653, 26588, 231.347],
980: [35061, 26913, 231.767],
990: [35472, 27240, 232.184],
1000: [35882, 27568, 232.597],
1020: [36709, 28228, 233.415],
1040: [37542, 28895, 234.204],
1060: [38380, 29567, 235.002],
1080: [39223, 30243, 235.802],
1100: [40071, 30925, 236.584],
1120: [40926, 31611, 237.363],
1140: [41780, 32301, 238.110],
1160: [42642, 32997, 238.859],
1180: [43509, 33698, 239.600],
1200: [44380, 34403, 240.333],
1220: [45256, 35112, 241.057],
1240: [46146, 35827, 241.771],
1260: [47022, 36546, 242.483],
1280: [47915, 37270, 243.187],
1300: [48807, 38000, 243.877],
1320: [49704, 38734, 244.556],
1340: [50612, 39470, 245.243],
1360: [51521, 40210, 245.923],
1380: [52434, 40960, 246.582],
1400: [53351, 41711, 247.241],
1420: [54273, 42466, 247.895],
1440: [55201, 43223, 248.543],
1460: [56128, 43989, 249.185],
1480: [57066, 44756, 249.820],
1500: [57999, 45528, 250.450],
1520: [58938, 46302, 251.073],
1540: [59888, 47084, 251.693],
1560: [60833, 47865, 252.305],
1580: [61792, 48655, 252.912],
1600: [62758, 49448, 253.509],
1620: [63709, 50240, 254.113],
1640: [64673, 51049, 254.703],
1660: [65643, 51841, 255.293],
1680: [66615, 52646, 255.873],
1700: [67589, 53455, 256.450],
1720: [68567, 54267, 257.022],
1740: [69550, 55083, 257.589],
1760: [70535, 55902, 258.151],
1780: [71523, 56723, 258.708],
1800: [72513, 57547, 259.262],
1820: [73507, 58375, 259.811],
1840: [74506, 59207, 260.357],
1860: [75506, 60042, 260.898],
1880: [76511, 60880, 261.436],
1900: [77517, 61720, 261.969],
1920: [78527, 62564, 262.497],
1940: [79540, 63411, 263.022],
1960: [80555, 64259, 263.542],
1980: [81573, 65111, 264.057],
2000: [82593, 65965, 264.567],
2020: [83615, 66811, 265.074],
2040: [84639, 67659, 265.575],
2060: [85666, 68509, 266.073],
2080: [86701, 69361, 266.566],
2100: [87735, 70275, 267.081],
2150: [90330, 72454, 268.301],
2200: [92940, 74649, 269.500],
2250: [95562, 76855, 270.679],
2300: [98199, 79076, 271.839],
2350: [100846, 81308, 272.979],
2400: [103508, 83553, 274.098],
2450: [106186, 85810, 275.196],
2500: [108868, 88082, 276.286],
2550: [111565, 90367, 277.366],
2600: [114273, 92656, 278.407],
2650: [116991, 94958, 279.441],
2700: [119717, 97269, 280.462],
2750: [122453, 99588, 281.473],
2800: [125198, 101917, 282.453],
2850: [127952, 104256, 283.412],
2900: [130717, 106605, 284.390],
2950: [133486, 108959, 285.338],
3000: [136264, 111321, 286.373],
3050: [139051, 113693, 287.194],
3100: [141856, 116072, 288.102],
3150: [144648, 118458, 288.999],
3200: [147457, 120851, 289.884],
3250: [150272, 123250, 290.756]
}

def interpolate(val1, val2, x1, x2, x):
    return val1 + (val2 - val1) * (x - x1) / (x2 - x1)

class IdealWaterProperties:
    def __init__(self, inputs: Dict[str, str]):
        self.inputs = inputs
        self.T = float(inputs.get("temperature", 0))
        self.temps = sorted(h2o_data.keys())

    def calculate(self) -> Dict[str, float]:
        if not (self.temps[0] <= self.T <= self.temps[-1]):
            raise ValueError(f"Temperature {self.T} K out of range.")

        if self.T in h2o_data:
            h, u, s = h2o_data[self.T]
        else:
            for i in range(len(self.temps) - 1):
                T1, T2 = self.temps[i], self.temps[i + 1]
                if T1 <= self.T <= T2:
                    break
            v1 = h2o_data[T1]
            v2 = h2o_data[T2]

            h = interpolate(v1[0], v2[0], T1, T2, self.T)
            u = interpolate(v1[1], v2[1], T1, T2, self.T)
            s = interpolate(v1[2], v2[2], T1, T2, self.T)

        return {
            "temperature": self.T,
            "enthalpy (h)": round(h, 4),
            "internal_energy (u)": round(u, 4),
            "entropy (sÂ°)": round(s, 5),
        }

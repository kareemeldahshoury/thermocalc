from typing import Dict

# Hydrogen data extracted from your table
h2_data = {
    260: [7370, 5209, 126.636],
    270: [7567, 5412, 127.719],
    280: [7945, 5617, 128.765],
    290: [8233, 5822, 129.775],
    298: [8468, 5989, 130.574],
    300: [8522, 6027, 130.781],
    310: [8803, 6234, 132.221],
    320: [9086, 6442, 133.641],
    330: [9369, 6650, 135.041],
    340: [9652, 6858, 136.039],
    360: [10262, 7268, 136.039],
    380: [10843, 7684, 137.612],
    400: [11426, 8100, 139.183],
    420: [12010, 8518, 140.852],
    440: [12594, 8936, 141.888],
    460: [13179, 9355, 143.187],
    480: [13764, 9773, 144.432],
    500: [14350, 10191, 145.676],
    520: [16107, 11451, 148.945],
    540: [16701, 11835, 150.166],
    560: [17453, 12313, 152.863],
    580: [18053, 12790, 154.645],
    600: [18700, 13269, 156.406],
    620: [19347, 13750, 158.147],
    640: [20017, 14234, 159.869],
    660: [20684, 14719, 161.572],
    680: [21363, 15205, 163.257],
    700: [22041, 15692, 164.926],
    720: [22729, 16180, 166.578],
    740: [23415, 16668, 168.214],
    760: [24113, 17159, 169.833],
    780: [24811, 17650, 171.437],
    800: [25510, 18141, 173.027],
    820: [26219, 18633, 174.602],
    840: [26934, 19127, 176.164],
    860: [27653, 19622, 177.711],
    880: [28383, 20120, 179.244],
    900: [29119, 20617, 180.763],
    920: [29856, 21116, 182.270],
    940: [30599, 21617, 183.762],
    960: [31354, 22120, 185.241],
    980: [32118, 22623, 186.709],
    1000: [32891, 23129, 188.162],
    1020: [33673, 23636, 189.603],
    1040: [34462, 24144, 191.033],
    1060: [35258, 24653, 192.449],
    1080: [36062, 25163, 193.854],
    1100: [36874, 25675, 195.248],
    1120: [37695, 26188, 196.631],
    1140: [38524, 26702, 198.003],
    1160: [39362, 27217, 199.364],
    1180: [40208, 27734, 200.715],
    1200: [41063, 28252, 202.056],
    1220: [41926, 28770, 203.386],
    1240: [42798, 29290, 204.706],
    1260: [43679, 29811, 206.017],
    1280: [44569, 30333, 207.317],
    1300: [45468, 30856, 208.608],
    1320: [46377, 31380, 209.889],
    1340: [47294, 31905, 211.161],
    1360: [48221, 32430, 212.423],
    1380: [49157, 32957, 213.677],
    1400: [50103, 33485, 214.921],
    1440: [42808, 30835, 177.410],
    1480: [44091, 31786, 178.291],
    1520: [45384, 32746, 179.158],
    1560: [46683, 33713, 179.995],
    1600: [47990, 34687, 180.796],
    1640: [49303, 35668, 181.632],
    1680: [50633, 36658, 182.461],
    1720: [51947, 37646, 183.208],
    1760: [53279, 38642, 183.979],
    1800: [54618, 39652, 184.724],
    1840: [55962, 40663, 185.463],
    1880: [57311, 41680, 186.190],
    1920: [58667, 42705, 186.904],
    1960: [60031, 43735, 187.607],
    2000: [61404, 44771, 188.297],
    2050: [63119, 46074, 189.148],
    2100: [64847, 47386, 190.279],
    2150: [66584, 48708, 190.796],
    2200: [68328, 50037, 191.550],
    2250: [70080, 51373, 192.385],
    2300: [71839, 52716, 193.159],
    2350: [73608, 54069, 193.921],
    2400: [75386, 55429, 194.673],
    2450: [77163, 56798, 195.403],
    2500: [78960, 58175, 196.124],
    2550: [80755, 59554, 196.837],
    2600: [82568, 60941, 197.542],
    2650: [84368, 62335, 198.229],
    2700: [86176, 63737, 198.907],
    2750: [88008, 65144, 199.575],
    2800: [89838, 66558, 200.234],
    2850: [91711, 67976, 200.885],
    2900: [93518, 69401, 201.527],
    2950: [95358, 70831, 202.157],
    3000: [97227, 72268, 202.778],
    3050: [99065, 73707, 203.391],
    3100: [100926, 75152, 203.996],
    3150: [102793, 76604, 204.591],
    3200: [104667, 78061, 205.181],
    3250: [106545, 79523, 205.765]
}

def interpolate(val1, val2, x1, x2, x):
    return val1 + (val2 - val1) * (x - x1) / (x2 - x1)

class IdealHydrogenProperties:
    def __init__(self, inputs: Dict[str, str]):
        self.inputs = inputs
        self.T = float(inputs.get("temperature", 0))
        self.temps = sorted(h2_data.keys())

    def calculate(self) -> Dict[str, float]:
        if not (self.temps[0] <= self.T <= self.temps[-1]):
            raise ValueError(f"Temperature {self.T} K out of range.")

        if self.T in h2_data:
            h, u, s = h2_data[self.T]
        else:
            for i in range(len(self.temps) - 1):
                T1, T2 = self.temps[i], self.temps[i + 1]
                if T1 <= self.T <= T2:
                    break
            v1 = h2_data[T1]
            v2 = h2_data[T2]

            h = interpolate(v1[0], v2[0], T1, T2, self.T)
            u = interpolate(v1[1], v2[1], T1, T2, self.T)
            s = interpolate(v1[2], v2[2], T1, T2, self.T)

        return {
            "temperature": self.T,
            "enthalpy (h)": round(h, 4),
            "internal_energy (u)": round(u, 4),
            "entropy (sÂ°)": round(s, 5),
        }
